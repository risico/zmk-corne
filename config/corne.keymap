/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define DEF             0
#define LOWER           1
#define RAISE           2
#define ADJ             3
#define GAME_DEF        4
#define GAME_RIGHT      5
#define GAME_NUM        6

&mt {
    flavor = "hold-preferred";
    quick-tap-ms = <200>;
};

&lt {
    flavor = "hold-preferred";
    quick-tap-ms = <200>;
};

/ {
    conditional_layers {
        compatible = "zmk,conditional-layers";

        tri_layer {
            if-layers = <LOWER RAISE>;
            then-layer = <ADJ>;
        };
    };

    behaviors {
        bm: balanced_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "OUTER_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <200>;// <---[[moderate duration]]
            quick-tap-ms = <0>;
            flavor = "balanced";
            bindings =
                <&kp>,
                <&kp>;
        };
    };

    combos {
        compatible = "zmk,combos";

        escape {
            bindings = <&kp ESC>;
            key-positions = <19 20>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            label = " DEFAULT";
            bindings = <
  &kp TAB  &kp Q  &kp W           &kp E             &kp R        &kp T             &kp Y      &kp U            &kp I    &kp O     &kp P       &kp BSPC
&kp LCTRL  &kp A  &kp S           &kp D             &kp F        &kp G             &kp H      &kp J            &kp K    &kp L  &kp SEMI        &kp SQT
&kp LSHFT  &kp Z  &kp X           &kp C             &kp V        &kp B             &kp N      &kp M        &kp COMMA  &kp DOT  &kp FSLH  &mt RALT RBKT
                         &lt 1 LEFT_ALT  &kp LEFT_COMMAND  &lt 2 SPACE    &lt 2 KP_ENTER  &kp SPACE  &lt 1 RIGHT_ALT
            >;
        };

        lower_layer {
            label = " LOWER";
            bindings = <
     &kp GRAVE    &kp N1  &kp N2    &kp N3    &kp N4     &kp N5       &kp N6    &kp N7    &kp N8    &kp N9    &kp N0  &kp MINUS
       &kp ESC  &kp EXCL  &kp AT  &kp HASH  &kp DLLR  &kp PRCNT    &kp CARET  &kp AMPS  &kp STAR  &kp LPAR  &kp RPAR  &kp RCTRL
&kp LEFT_SHIFT    &kp N1  &kp N2    &kp N3    &kp N4     &kp N5       &kp N6    &kp N7    &kp N8    &kp N9    &kp N0   &kp RALT
                                    &trans    &trans     &trans       &trans    &trans    &trans
            >;
        };

        raise_layer {
            label = " RAISE";
            bindings = <
 &kp LGUI  &kp UNDER  &kp PG_UP  &kp PSCRN   &kp HOME  &kp EQUAL      &kp KP_SLASH       &kp KP_N7     &kp KP_N8        &kp KP_N9  &kp KP_MINUS   &kp RGUI
&kp LCTRL    &kp INS   &kp LEFT     &kp UP  &kp RIGHT  &kp MINUS    &kp LEFT_ARROW  &kp DOWN_ARROW  &kp UP_ARROW  &kp RIGHT_ARROW   &kp KP_PLUS  &kp RCTRL
 &kp LALT  &kp K_APP  &kp PG_DN   &kp DOWN    &kp END   &kp BSLH         &kp KP_N0       &kp KP_N1     &kp KP_N2        &kp KP_N3       &kp DOT   &kp RALT
                                    &trans     &trans     &trans            &trans          &trans        &trans
            >;
        };

        adjust_layer {
            label = " ADJUST";
            bindings = <
     &none    &kp C_MUTE         &none         &none         &none  &kp C_VOL_UP     &to 4            &none     &none       &none     &none  &none
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4     &none            &none     &none       &none     &none  &none
     &none    &kp C_STOP      &kp C_PP    &kp C_PREV    &kp C_NEXT  &kp C_VOL_DN     &none  &kp PAUSE_BREAK  &kp SLCK  &kp KP_NUM  &kp CAPS  &none
                                              &trans        &trans        &trans    &trans           &trans    &trans
            >;
        };

        // GAME layers

        game_default_layer {
            label = " GAME";
            bindings = <
&kp TAB      &kp Q  &kp C  &kp E      &kp R  &kp T     &none   &none   &none  &none  &none  &to 0
  &kp G  &kp LSHFT  &kp A  &kp W      &kp D  &kp F     &none   &none   &none  &none  &none  &none
  &kp Z  &kp LCTRL  &kp X  &kp S      &kp V  &kp B     &none   &none   &none  &none  &none  &none
                           &mo 5  &kp SPACE  &mo 6    &trans  &trans  &trans
            >;
        };

        game_right_layer {
            label = " GAME R";
            bindings = <
&kp LBKT     &kp P    &kp O      &kp I   &kp U   &kp Y     &none   &none   &none  &none  &none  &none
 &kp SQT  &kp SEMI    &kp L      &kp K   &kp J   &kp H     &none   &none   &none  &none  &none  &none
&kp RBKT  &kp FSLH  &kp DOT  &kp COMMA   &kp M   &kp N     &none   &none   &none  &none  &none  &none
                                &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };

        game_num_layer {
            label = " GAME N";
            bindings = <
 &kp F6  &kp F1  &kp F2  &kp F3  &kp F4  &kp F5     &none   &none   &none  &none  &none  &none
&kp ESC  &kp N1  &kp N2  &kp N3  &kp N4  &kp N5     &none   &none   &none  &none  &none  &none
 &kp F7  &kp N6  &kp N7  &kp N8  &kp N9  &kp N0     &none   &none   &none  &none  &none  &none
                         &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };
    };
};
